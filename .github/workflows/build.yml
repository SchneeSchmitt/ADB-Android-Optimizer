name: Build Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: pip install PySide6
      
    - name: Remove .bat files
      run: |
        find . -name "*.bat" -type f -delete
        
    - name: Create installer
      run: |
        if [[ '${{ runner.os }}' == 'Windows' ]]; then
          # Windows installer using Inno Setup
          echo "Downloading Inno Setup..."
          curl -O https://jrsoftware.org/download.php/is.exe
          ./is.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-
          
          echo "Creating installer script..."
          cat > installer.iss << 'EOF'
          [Setup]
          AppName=ADB Android Optimizer
          AppVersion=1.0
          DefaultDirName={pf}\ADB_Android_Optimizer
          DefaultGroupName=ADB Android Optimizer
          OutputDir=.
          OutputBaseFilename=ADB_Android_Optimizer_Setup
          Compression=lzma
          SolidCompression=yes
          
          [Files]
          Source: "*"; Excludes: "*.bat,*.iss,is.exe"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
          
          [Icons]
          Name: "{group}\ADB Android Optimizer"; Filename: "{app}\main.py"
          EOF
          
          echo "Building installer..."
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss
          
        elif [[ '${{ runner.os }}' == 'macOS' ]]; then
          # macOS .pkg installer
          echo "Creating macOS package..."
          pkgbuild --root . \
                   --identifier com.example.adboptimizer \
                   --version 1.0 \
                   --install-location /Applications \
                   --filter ".*\.bat" \
                   ADB_Android_Optimizer.pkg
                   
        else  # Linux
          # Linux .deb package
          echo "Creating DEB package structure..."
          mkdir -p debian/DEBIAN
          mkdir -p debian/usr/local/bin
          mkdir -p debian/usr/share/applications
          
          cp -r * debian/usr/local/bin/
          rm -f debian/usr/local/bin/*.bat
          
          cat > debian/DEBIAN/control << 'EOF'
          Package: adb-android-optimizer
          Version: 1.0
          Section: utils
          Priority: optional
          Architecture: all
          Maintainer: Your Name <your.email@example.com>
          Description: ADB Android Optimizer Tool
          EOF
          
          echo "Building DEB package..."
          dpkg-deb --build debian ADB_Android_Optimizer.deb
        fi
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-package
        path: |
          ADB_Android_Optimizer_*.zip
          ADB_Android_Optimizer_*.tar.gz